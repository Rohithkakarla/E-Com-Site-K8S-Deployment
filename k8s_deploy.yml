apiVersion: v1
kind: Secret
metadata:
   name: ecom-mongo-secret
data:
  username: cm9vdA==
  password: cGFzc3dvcmQ=
  db: ZWNvbV9kYg==

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecom-mongo-deployment
  labels:
    app: ecom-mongo-deployment
spec:
  selector: 
    matchLabels:
      app: ecom-mongo-pod
  replicas: 1
  template:
    metadata:
      labels:
        app: ecom-mongo-pod
      name: ecom-mongo-pod
    spec:
      containers:
      - image: mongo:latest
        name: ecom-mongo-cont
        env:
          - name: MONGO_INITDB_ROOT_USERNAME
            valueFrom:
              secretKeyRef:
                name: ecom-mongo-secret
                key: username
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ecom-mongo-secret
                key: password
          - name: MONGO_INITDB_DATABASE
            valueFrom:
              secretKeyRef:
                name: ecom-mongo-secret
                key: db
        ports:
          - containerPort: 27017
            name: ecom-mongo-cont
        volumeMounts:
          - name: ecom-mongo-persistent-storage
            mountPath: /data/db
          - name: ecom-mongo-startupscript
            mountPath: /docker-entrypoint-initdb.d/init-mongo.js
      volumes:
        - name: ecom-mongo-persistent-storage # Obtaining 'vloume' from PVC
          hostPath:
            path: /tmp/db
            type: Directory
        - name: ecom-mongo-startupscript
          hostPath:
            path: /mongo-init.js


---

apiVersion: v1
kind: Service
metadata:
  name: ecom-mongo-service
spec:
  selector:
    app: ecom-mongo-pod
  ports:
    - port: 27017
      targetPort: 27017

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: ecom-spring-configmap
data:
  host: ecom-mongo-service
  db: ecom_db
  username: root
  password: password

---

apiVersion: apps/v1
kind: Deployment
metadata:
  # name ---> name of the deployment
  name: ecom-spring-deployment
  # labels ---> identification purpose
  labels:
    app: springrest
spec:
  template:
    # Pod details here
    metadata:
      name: ecom-spring-pod
      labels:
        app: ecom-spring-pod
    spec:
      containers:
        - image: rohithkakarla/ecomspring:latest
          name: ecom-spring
          env:
            - name: MONGO_HOST
              valueFrom:
                configMapKeyRef:
                  name: ecom-spring-configmap
                  key: host
            - name: MONGO_DB
              valueFrom:
                configMapKeyRef:
                  name: ecom-spring-configmap
                  key: db
            - name: MONGO_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: ecom-spring-configmap
                  key: username
            - name: MONGO_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: ecom-spring-configmap
                  key: password
  replicas: 1
  selector:
    matchLabels:
      app: ecom-spring-pod

---

apiVersion: v1
kind: Service
metadata:
  name: ecom-spring-service
spec:
  type: NodePort
  selector:
    app: ecom-spring-pod
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
      nodePort: 30008

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecom-angular-deployment
  labels:
    app: ecom-angular-deployment
spec:
  selector: 
    matchLabels:
      app: ecom-angular-pod
  replicas: 1
  template:
    metadata:
      labels:
        app: ecom-angular-pod
      name: ecom-angular-pod
    spec:
      containers:
      - image: rohithkakarla/ecomangular:latest
        name: ecom-ang-cont
        ports:
          - containerPort: 80
            name: ecom-ang-cont

---

apiVersion: v1
kind: Service
metadata:
  name: ecom-angular-service
spec:
  type: NodePort
  selector:
    app: ecom-angular-pod
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30007